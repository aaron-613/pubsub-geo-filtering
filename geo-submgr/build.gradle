/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'application'
apply plugin: "eclipse"
apply plugin: "idea"

//sourceCompatibility = 1.8
//targetCompatibility = 1.8

// Don't need these tasks, so disabling them. Makes it possible to avoid
// declaring a single application main class.
startScripts.enabled = false
run.enabled = false

//mainClassName = 'com.solace.aaron.geo.submgr.GeoRoutingSubscriptionManager'

dependencies {

    implementation project(':geo-api') 

    implementation group: 'com.solacesystems', name: 'sol-jcsmp', version: '10.10.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.11.1'
    //implementation group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.11.1'

    //implementation group: 'javax.json', name: 'javax.json-api', version: '1.1.3'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.3'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    
}


def scripts = [
    'SubsReplier':'com.solace.aaron.geo.submgr.SubsReplier'
//    'GeoSubMgr':'com.solace.aaron.geo.submgr.GeoSubMgr'
]
scripts.each() { scriptName, className ->
    def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
        mainClass = className
        applicationName = scriptName
        outputDir = new File(project.buildDir, 'scripts')
        classpath = jar.outputs.files + project.configurations.runtimeClasspath
        defaultJvmOpts = ['-ea']
    }
    applicationDistribution.into("bin") {
        from(t)
        fileMode = 0755
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    //createAllStartScripts.dependsOn(t)
}
