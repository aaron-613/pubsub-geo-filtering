
plugins {
    id 'java-library'
    //id 'org.asciidoctor.convert' version '1.5.6' apply false 
}

configure(subprojects.findAll { it.name.startsWith('geo') }) {

    apply plugin: 'java'
//    apply plugin: 'checkstyle'

    dependencies {
        // for my various geometric calculations
        implementation 'org.locationtech.jts:jts:1.17.0'
        implementation 'org.locationtech.jts.io:jts-io-common:1.17.0'
        //implementation group: 'math.geom2d', name: 'javaGeom', version: '0.11.1'
        // https://github.com/vsch/flexmark-java
        //implementation 'com.vladsch.flexmark:flexmark-all:0.62.2'


        // new an improved logging framework, no more slf4j
        implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
        // JUnit framework for unit tests
        testImplementation 'junit:junit:4.12'
        testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")


        testImplementation(platform('org.junit:junit-bom:5.7.0'))
        testImplementation('org.junit.jupiter:junit-jupiter')

    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}


configurations {
  jaxDoclet
}

dependencies {
  //jaxDoclet "some.interesting:Dependency:1.0"
}

task generateRestApiDocs(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = reporting.file("rest-api-docs")
  options.docletpath = configurations.jaxDoclet.files.asType(List)
  options.doclet = "com.lunatech.doclets.jax.jaxrs.JAXRSDoclet"
  options.addStringOption("jaxrscontext", "http://localhost:8080/myapp")
}




allprojects {

  repositories {
    jcenter()
    mavenCentral()
  }

  task hello { doLast { task ->
            println "I'm $task.project.name"
      }
  }
}

subprojects {
  hello {
    doLast {
      println "- I depend on water"
    }
  }
}
